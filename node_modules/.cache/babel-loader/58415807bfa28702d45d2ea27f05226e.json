{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport cartItems from \"../../cartItems\";\nconst initialState = {\n  cartItems: cartItems,\n  amount: 4,\n  total: 0,\n  isLoading: true\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    clearCart: state => {\n      state.cartItems = [];\n    },\n    removeItem: (state, action) => {\n      const itemId = action.payload;\n      state.cartItems = state.cartItems.filter(item => item.id != itemId);\n    }\n  }\n}); //console.log(cartSlice);\n\nexport const {\n  clearCart,\n  removeItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/shankarpandey/Desktop/redux-toolkit/src/features/cart/cartSlice.js"],"names":["createSlice","cartItems","initialState","amount","total","isLoading","cartSlice","name","reducers","clearCart","state","removeItem","action","itemId","payload","filter","item","id","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,YAAY,GAAC;AACfD,EAAAA,SAAS,EAACA,SADK;AAEfE,EAAAA,MAAM,EAAC,CAFQ;AAGfC,EAAAA,KAAK,EAAC,CAHS;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAnB;AAQA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAC,MADqB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAEC,KAAD,IAAS;AACfA,MAAAA,KAAK,CAACT,SAAN,GAAgB,EAAhB;AAEH,KAJK;AAKNU,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACxB,YAAMC,MAAM,GAAGD,MAAM,CAACE,OAAtB;AACAJ,MAAAA,KAAK,CAACT,SAAN,GAAkBS,KAAK,CAACT,SAAN,CAAgBc,MAAhB,CAAwBC,IAAD,IAASA,IAAI,CAACC,EAAL,IAAWJ,MAA3C,CAAlB;AACH;AARK;AAHgB,CAAD,CAA7B,C,CAeA;;AACA,OAAO,MAAK;AAACJ,EAAAA,SAAD;AAAWE,EAAAA;AAAX,IAAwBL,SAAS,CAACY,OAAvC;AACP,eAAeZ,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport cartItems from \"../../cartItems\";\n\nconst initialState={\n    cartItems:cartItems,\n    amount:4,\n    total:0,\n    isLoading: true,\n\n}\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState,\n    reducers :{\n        clearCart:(state)=>{\n            state.cartItems=[];\n            \n        },\n        removeItem: (state,action)=>{\n            const itemId = action.payload\n            state.cartItems = state.cartItems.filter((item)=> item.id != itemId)\n        }\n        \n    },\n});\n//console.log(cartSlice);\nexport const{clearCart,removeItem}= cartSlice.actions;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}