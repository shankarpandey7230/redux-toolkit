{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport cartItems from \"../../cartItems\";\nconst url = 'https://course-api.com/react-useReducer-cart-project';\nconst initialState = {\n  cartItems: cartItems,\n  amount: 4,\n  total: 0,\n  isLoading: true\n};\nexport const getCartItems = createAsyncThunk('cart/getCartItems', () => {\n  return fetch(url).then(resp => resp.json()).catch(err => console.log(err));\n});\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    clearCart: state => {\n      state.cartItems = [];\n    },\n    removeItem: (state, action) => {\n      const itemId = action.payload;\n      state.cartItems = state.cartItems.filter(item => item.id !== itemId);\n    },\n    increase: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const cartItem = state.cartItems.find(item => item.id === payload.id);\n      cartItem.amount = cartItem.amount + 1;\n    },\n    decrease: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const cartItem = state.cartItems.find(item => item.id === payload.id);\n      cartItem.amount = cartItem.amount - 1;\n    },\n    calculateTotals: state => {\n      let amount = 0;\n      let total = 0;\n      state.cartItems.forEach(item => {\n        amount += item.amount;\n        total += item.amount * item.price;\n      });\n      state.amount = amount;\n      state.total = total;\n    }\n  },\n  extraReducers: {\n    [getCartItems.pending]: state => {\n      state.isLoading = true;\n    },\n    [getCartItems.fulfilled]: (state, action) => {\n      console.log(action);\n      state.isLoading = false;\n      state.cartItems = action.payload;\n    },\n    [getCartItems.rejected]: state => {\n      state.isLoading = false;\n    }\n  }\n}); //console.log(cartSlice);\n\nexport const {\n  clearCart,\n  removeItem,\n  increase,\n  decrease,\n  calculateTotals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/shankarpandey/Desktop/redux-toolkit/src/features/cart/cartSlice.js"],"names":["createSlice","createAsyncThunk","cartItems","url","initialState","amount","total","isLoading","getCartItems","fetch","then","resp","json","catch","err","console","log","cartSlice","name","reducers","clearCart","state","removeItem","action","itemId","payload","filter","item","id","increase","cartItem","find","decrease","calculateTotals","forEach","price","extraReducers","pending","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport cartItems from \"../../cartItems\";\n\nconst url = 'https://course-api.com/react-useReducer-cart-project';\n\nconst initialState={\n    cartItems:cartItems,\n    amount:4,\n    total:0,\n    isLoading: true,\n\n}\nexport const getCartItems = createAsyncThunk('cart/getCartItems',  ()=>{\n    return fetch(url)\n    .then(resp => resp.json())\n    .catch((err)=>console.log(err));\n    \n    \n})\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState,\n    reducers :{\n        clearCart:(state)=>{\n            state.cartItems=[];\n            \n        },\n        removeItem: (state,action)=>{\n            const itemId = action.payload\n            state.cartItems = state.cartItems.filter((item)=> item.id !== itemId)\n        },\n        increase:(state,{payload})=>{\n            const cartItem = state.cartItems.find((item)=>item.id === payload.id)\n            cartItem.amount = cartItem.amount+1;\n        },\n        decrease:(state,{payload})=>{\n            const cartItem = state.cartItems.find((item)=>item.id === payload.id)\n            cartItem.amount = cartItem.amount-1;\n        },\n        calculateTotals:(state)=>{\n            let amount = 0;\n            let total = 0;\n            state.cartItems.forEach((item)=>{\n                amount += item.amount;\n                total +=item.amount * item.price;\n\n            })\n            state.amount = amount;\n            state.total= total;\n\n        },\n    },\n    extraReducers: {\n        [getCartItems.pending]: (state) => {\n          state.isLoading = true;\n        },\n        [getCartItems.fulfilled]: (state, action) => {\n          console.log(action);\n          state.isLoading = false;\n          state.cartItems = action.payload;\n        },\n        [getCartItems.rejected]: (state) => {\n          state.isLoading = false;\n        },\n      },\n});\n//console.log(cartSlice);\nexport const{clearCart,removeItem, increase, decrease,calculateTotals}= cartSlice.actions;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}