{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport cartItems from \"../../cartItems\";\nconst initialState = {\n  cartItems: cartItems,\n  amount: 4,\n  total: 0,\n  isLoading: true\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    clearCart: state => {\n      state.cartItems = [];\n    },\n    removeItem: (state, action) => {\n      const itemId = action.payload;\n      state.cartItems = state.cartItems.filter(item => item.id != itemId);\n    },\n    increase: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const cartItem = state.cartItems.find(item => item.id === payload.id);\n      cartItem.amount = cartItem.amount + 1;\n    },\n    decrease: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const cartItem = state.cartItems.find(item => item.id === payload.id);\n      cartItem.amount = cartItem.amount - 1;\n    },\n    calculateTotals: state => {\n      let amount = 0;\n      let total = 0;\n      state.cartItems.forEach(item => {\n        amount += item.amount;\n        total += item.amount * item.price;\n      });\n      state.amount = amount;\n      state.total = total;\n    }\n  }\n}); //console.log(cartSlice);\n\nexport const {\n  clearCart,\n  removeItem,\n  increase,\n  decrease,\n  calculateTotals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/shankarpandey/Desktop/redux-toolkit/src/features/cart/cartSlice.js"],"names":["createSlice","cartItems","initialState","amount","total","isLoading","cartSlice","name","reducers","clearCart","state","removeItem","action","itemId","payload","filter","item","id","increase","cartItem","find","decrease","calculateTotals","forEach","price","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,YAAY,GAAC;AACfD,EAAAA,SAAS,EAACA,SADK;AAEfE,EAAAA,MAAM,EAAC,CAFQ;AAGfC,EAAAA,KAAK,EAAC,CAHS;AAIfC,EAAAA,SAAS,EAAE;AAJI,CAAnB;AAQA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAC,MADqB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAEC,KAAD,IAAS;AACfA,MAAAA,KAAK,CAACT,SAAN,GAAgB,EAAhB;AAEH,KAJK;AAKNU,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACxB,YAAMC,MAAM,GAAGD,MAAM,CAACE,OAAtB;AACAJ,MAAAA,KAAK,CAACT,SAAN,GAAkBS,KAAK,CAACT,SAAN,CAAgBc,MAAhB,CAAwBC,IAAD,IAASA,IAAI,CAACC,EAAL,IAAWJ,MAA3C,CAAlB;AACH,KARK;AASNK,IAAAA,QAAQ,EAAC,CAACR,KAAD,WAAmB;AAAA,UAAZ;AAACI,QAAAA;AAAD,OAAY;AACxB,YAAMK,QAAQ,GAAGT,KAAK,CAACT,SAAN,CAAgBmB,IAAhB,CAAsBJ,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACG,EAAjD,CAAjB;AACAE,MAAAA,QAAQ,CAAChB,MAAT,GAAkBgB,QAAQ,CAAChB,MAAT,GAAgB,CAAlC;AACH,KAZK;AAaNkB,IAAAA,QAAQ,EAAC,CAACX,KAAD,YAAmB;AAAA,UAAZ;AAACI,QAAAA;AAAD,OAAY;AACxB,YAAMK,QAAQ,GAAGT,KAAK,CAACT,SAAN,CAAgBmB,IAAhB,CAAsBJ,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACG,EAAjD,CAAjB;AACAE,MAAAA,QAAQ,CAAChB,MAAT,GAAkBgB,QAAQ,CAAChB,MAAT,GAAgB,CAAlC;AACH,KAhBK;AAiBNmB,IAAAA,eAAe,EAAEZ,KAAD,IAAS;AACrB,UAAIP,MAAM,GAAG,CAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;AACAM,MAAAA,KAAK,CAACT,SAAN,CAAgBsB,OAAhB,CAAyBP,IAAD,IAAQ;AAC5Bb,QAAAA,MAAM,IAAIa,IAAI,CAACb,MAAf;AACAC,QAAAA,KAAK,IAAGY,IAAI,CAACb,MAAL,GAAca,IAAI,CAACQ,KAA3B;AAEH,OAJD;AAKAd,MAAAA,KAAK,CAACP,MAAN,GAAeA,MAAf;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAaA,KAAb;AAEH;AA5BK;AAHgB,CAAD,CAA7B,C,CAkCA;;AACA,OAAO,MAAK;AAACK,EAAAA,SAAD;AAAWE,EAAAA,UAAX;AAAuBO,EAAAA,QAAvB;AAAiCG,EAAAA,QAAjC;AAA0CC,EAAAA;AAA1C,IAA4DhB,SAAS,CAACmB,OAA3E;AACP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport cartItems from \"../../cartItems\";\n\nconst initialState={\n    cartItems:cartItems,\n    amount:4,\n    total:0,\n    isLoading: true,\n\n}\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState,\n    reducers :{\n        clearCart:(state)=>{\n            state.cartItems=[];\n            \n        },\n        removeItem: (state,action)=>{\n            const itemId = action.payload\n            state.cartItems = state.cartItems.filter((item)=> item.id != itemId)\n        },\n        increase:(state,{payload})=>{\n            const cartItem = state.cartItems.find((item)=>item.id === payload.id)\n            cartItem.amount = cartItem.amount+1;\n        },\n        decrease:(state,{payload})=>{\n            const cartItem = state.cartItems.find((item)=>item.id === payload.id)\n            cartItem.amount = cartItem.amount-1;\n        },\n        calculateTotals:(state)=>{\n            let amount = 0;\n            let total = 0;\n            state.cartItems.forEach((item)=>{\n                amount += item.amount;\n                total +=item.amount * item.price;\n\n            })\n            state.amount = amount;\n            state.total= total;\n\n        },\n    },\n});\n//console.log(cartSlice);\nexport const{clearCart,removeItem, increase, decrease,calculateTotals}= cartSlice.actions;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}